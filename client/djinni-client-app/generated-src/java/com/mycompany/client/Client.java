// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from client.djinni

package com.mycompany.client;

import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicBoolean;

public abstract class Client {
    public abstract ArrayList<User> getUserinfo();

    public abstract void register(String username, String password, String deviceid);

    public abstract void checkAuth(String username, String auth);

    public abstract void login(String username, String password, String deviceid);

    public static native Client createWithPath(String path);

    private static final class CppProxy extends Client
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public ArrayList<User> getUserinfo()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getUserinfo(this.nativeRef);
        }
        private native ArrayList<User> native_getUserinfo(long _nativeRef);

        @Override
        public void register(String username, String password, String deviceid)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_register(this.nativeRef, username, password, deviceid);
        }
        private native void native_register(long _nativeRef, String username, String password, String deviceid);

        @Override
        public void checkAuth(String username, String auth)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_checkAuth(this.nativeRef, username, auth);
        }
        private native void native_checkAuth(long _nativeRef, String username, String auth);

        @Override
        public void login(String username, String password, String deviceid)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_login(this.nativeRef, username, password, deviceid);
        }
        private native void native_login(long _nativeRef, String username, String password, String deviceid);
    }
}
