// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from client.djinni

package com.mycompany.client;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class ClientInterface {
    public abstract User getUserinfo(String username);

    public abstract Reply registerAccount(String username, String password, String deviceid);

    public abstract Reply checkAuth(String username, String auth);

    public abstract Reply login(String username, String password, String deviceid);

    public static native ClientInterface createWithPath(String path);

    private static final class CppProxy extends ClientInterface
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public User getUserinfo(String username)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getUserinfo(this.nativeRef, username);
        }
        private native User native_getUserinfo(long _nativeRef, String username);

        @Override
        public Reply registerAccount(String username, String password, String deviceid)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_registerAccount(this.nativeRef, username, password, deviceid);
        }
        private native Reply native_registerAccount(long _nativeRef, String username, String password, String deviceid);

        @Override
        public Reply checkAuth(String username, String auth)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_checkAuth(this.nativeRef, username, auth);
        }
        private native Reply native_checkAuth(long _nativeRef, String username, String auth);

        @Override
        public Reply login(String username, String password, String deviceid)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_login(this.nativeRef, username, password, deviceid);
        }
        private native Reply native_login(long _nativeRef, String username, String password, String deviceid);
    }
}
