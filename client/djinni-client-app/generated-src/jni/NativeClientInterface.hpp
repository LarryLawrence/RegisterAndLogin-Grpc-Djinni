// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from client.djinni

#pragma once

#include "client_interface.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeClientInterface final : ::djinni::JniInterface<::client::ClientInterface, NativeClientInterface> {
public:
    using CppType = std::shared_ptr<::client::ClientInterface>;
    using CppOptType = std::shared_ptr<::client::ClientInterface>;
    using JniType = jobject;

    using Boxed = NativeClientInterface;

    ~NativeClientInterface();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeClientInterface>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeClientInterface>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeClientInterface();
    friend ::djinni::JniClass<NativeClientInterface>;
    friend ::djinni::JniInterface<::client::ClientInterface, NativeClientInterface>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::client::ClientInterface
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        ::client::Reply register_account(const std::string & username, const std::string & password, const std::string & deviceid) override;
        ::client::Reply check_auth(const std::string & username, const std::string & auth) override;
        ::client::Reply login(const std::string & username, const std::string & password, const std::string & deviceid) override;

    private:
        friend ::djinni::JniInterface<::client::ClientInterface, ::djinni_generated::NativeClientInterface>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/chang/client/ClientInterface") };
    const jmethodID method_registerAccount { ::djinni::jniGetMethodID(clazz.get(), "registerAccount", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/chang/client/Reply;") };
    const jmethodID method_checkAuth { ::djinni::jniGetMethodID(clazz.get(), "checkAuth", "(Ljava/lang/String;Ljava/lang/String;)Lcom/chang/client/Reply;") };
    const jmethodID method_login { ::djinni::jniGetMethodID(clazz.get(), "login", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/chang/client/Reply;") };
};

}  // namespace djinni_generated
