// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from client.djinni

#import "TDAClient+Private.h"
#import "TDAClient.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "TDAReply+Private.h"
#import "TDAUser+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface TDAClient ()

- (id)initWithCpp:(const std::shared_ptr<::client::Client>&)cppRef;

@end

@implementation TDAClient {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::client::Client>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::client::Client>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable TDAClient *)createWithPath:(nonnull NSString *)path {
    try {
        auto objcpp_result_ = ::client::Client::create_with_path(::djinni::String::toCpp(path));
        return ::djinni_generated::Client::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull TDAUser *)getUserinfo:(nonnull NSString *)username {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->get_userinfo(::djinni::String::toCpp(username));
        return ::djinni_generated::User::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull TDAReply *)register:(nonnull NSString *)username
                      password:(nonnull NSString *)password
                      deviceid:(nonnull NSString *)deviceid {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->register(::djinni::String::toCpp(username),
                                                            ::djinni::String::toCpp(password),
                                                            ::djinni::String::toCpp(deviceid));
        return ::djinni_generated::Reply::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull TDAReply *)checkAuth:(nonnull NSString *)username
                           auth:(nonnull NSString *)auth {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->check_auth(::djinni::String::toCpp(username),
                                                              ::djinni::String::toCpp(auth));
        return ::djinni_generated::Reply::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull TDAReply *)login:(nonnull NSString *)username
                   password:(nonnull NSString *)password
                   deviceid:(nonnull NSString *)deviceid {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->login(::djinni::String::toCpp(username),
                                                         ::djinni::String::toCpp(password),
                                                         ::djinni::String::toCpp(deviceid));
        return ::djinni_generated::Reply::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto Client::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto Client::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<TDAClient>(cpp);
}

}  // namespace djinni_generated

@end
